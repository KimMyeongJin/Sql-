select empno, ename, job, sal, deptno
from emp;

-- 뷰 생성
create view test_view
as
select empno, ename, job, sal,comm, deptno
from emp;

select * from test_view;

-- 뷰 삭제
drop view test_view;

-- create or replace view 뷰이름 as 실제로 실행할 sql 명령어;
-- 뷰를 생성하거나 수정할 경우 사용
create or replace view test_view
as
select empno, ename, job, sal,comm, deptno
from emp;

select * from test_view;
-- 사원 테이블과 부서 테이블 조인
create or replace view test_view as
select empno,ename,e.deptno,dname
from emp e, dept d
where e.deptno = d.deptno;

-- 뷰를 테이블처럼 사용할 수 있음 (실제로는 뷰 안에 정의된 sql 명령어가 실행됨)
select * from test_view;
-- 테이블, 뷰 목록 확인
select * from tab;
-- 뷰의 세부 정보 확인
select * from user_views;

select rowid, rownum, empno, ename from emp;

create index c_emp_name_idx on c_emp(name);

drop table c_emp;

create table c_emp (
id number(5) not null,
name varchar2 (25),
salary number(7,2),
phone varchar2(15),
dept_name varchar2(25)
);

insert into c_emp (id,name) values (10,'kim');

insert into c_emp (id,name) values (20,'park');

insert into c_emp (id,name) values (30,'hong');

create index c_emp_name_idx on c_emp(name);

select * from c_emp where name = 'hong';
-- F10 실행계획 보기

desc student;

select studno,name from student where studno=9411;

select studno, name from student where name = '서진수';

-- 학생 테이블의 name 필드에 인덱스 추가
-- 인덱스의 종류 : unique 인덱스 (고유한 인덱스), non-unique 인덱스
create index student_name_idx on student(name) ;

-- 인덱스 테스트를 위한 테이블 생성
create table emp3(
no number,
name varchar2(10),
sal number
);

-- 테스트용 레코드 100만건 입력
declare
    i number := 1;
    name varchar(20) := 'kim';
    sal number := 0;
begin
    while i <= 1000000 loop
    if i mod 2 = 0 then
      name := 'kim'|| to_char(i);
      sal := 300;
    elsif i mod 3 = 0 then
      name := 'park'|| to_char(i);
      sal := 400;
    elsif i mod 5 = 0 then
      name := 'hong'|| to_char(i);
      sal := 500;  
      else
      name := 'shin' || to_char(i);
      sal := 250;
      end if;
      insert into emp3 values (i,name,sal);
      i := i + 1;
      end loop;
      end;
      /
      
select count (*)  from emp3;
-- 인덱스를 사용하지 않을 경우 : table access full, cost:894
select * from emp3 where name='shin691' and sal > 200;
-- 인덱스 추가
-- create index 인덱스 이름 on 테이블(컬럼)
create index emp_name_idx on emp3(name,sal);
-- index range scan, cost:11
select * from emp3 where name ='shin691' and sal > 200;
-- 인덱스 정보 확인
-- unique index : primary key, unique 제약조건 컬럼에 적용
-- nounique index
select * from user_indexes where table_name = 'EMP3';

create table emp4(
no number primary key,
name varchar2(10),
sal number
);
-- primary key는 인덱스가 자동으로 만들어짐(unique index)
select * from user_indexes where table_name='EMP4';

desc emp3;
select * from emp3 where no > 900000;

select * from student where studno > 9500;
-- 시퀀스 생성
create sequence c_emp_seq --시퀀스이름
increment by 1 -- 증가값
start with 103 -- 시작값
maxvalue 1000000 -- 최대값
nocache -- 캐쉬 사용 여부
nocycle; -- 순환 여부

-- 시퀀스.nextval : 다음값을 반환함
select c_emp_seq.nextval from dual;
-- 시퀀스.currval : 현재값을 반환함
select c_emp_seq.currval from dual;
-- 시퀀스를 활용하여 일련번호 발급
insert into c_emp 
values(c_emp_seq.nextval, 'aaa', 1000, '3429-001', 10);
-- 서브쿼리를 활용하여 일련번호 발급
insert into c_emp values
((select nvl(max(id)+1,1) from c_emp), 'bbb', 2000, '3429-002', 20);

select * from c_emp;


--시퀀스 문제
create sequence emp_seq2
increment by 1
start with 306
maxvalue 999;

insert into c_emp (id,name,dept_name) values
(emp_seq2.nextval, '김철수', '구매팀');

select * from c_emp;

commit;